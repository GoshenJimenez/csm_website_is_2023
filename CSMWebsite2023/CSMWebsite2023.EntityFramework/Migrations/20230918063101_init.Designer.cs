// <auto-generated />
using System;
using CSMWebsite2023.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CSMWebsite2023.EntityFramework.Migrations
{
    [DbContext(typeof(DefaultDbContext))]
    [Migration("20230918063101_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("CSMWebsite2023.Data.Models.Chat", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Chats");

                    b.HasData(
                        new
                        {
                            Id = new Guid("857918e8-67dd-4c35-b70d-936ba0fc0c01"),
                            CreatedAt = new DateTime(2023, 9, 18, 14, 31, 1, 92, DateTimeKind.Local).AddTicks(8925),
                            Name = "School Friends Chat",
                            UpdatedAt = new DateTime(2023, 9, 18, 14, 31, 1, 92, DateTimeKind.Local).AddTicks(8925)
                        },
                        new
                        {
                            Id = new Guid("857918e8-67dd-4c35-b70d-936ba0fc0c02"),
                            CreatedAt = new DateTime(2023, 9, 18, 14, 31, 1, 92, DateTimeKind.Local).AddTicks(8928),
                            Name = "Family Chat",
                            UpdatedAt = new DateTime(2023, 9, 18, 14, 31, 1, 92, DateTimeKind.Local).AddTicks(8928)
                        },
                        new
                        {
                            Id = new Guid("857918e8-67dd-4c35-b70d-936ba0fc0c03"),
                            CreatedAt = new DateTime(2023, 9, 18, 14, 31, 1, 92, DateTimeKind.Local).AddTicks(8930),
                            Name = "CIS 214 Chat",
                            UpdatedAt = new DateTime(2023, 9, 18, 14, 31, 1, 92, DateTimeKind.Local).AddTicks(8929)
                        },
                        new
                        {
                            Id = new Guid("857918e8-67dd-4c35-b70d-936ba0fc0c04"),
                            CreatedAt = new DateTime(2023, 9, 18, 14, 31, 1, 92, DateTimeKind.Local).AddTicks(8932),
                            Name = "History Class Chat",
                            UpdatedAt = new DateTime(2023, 9, 18, 14, 31, 1, 92, DateTimeKind.Local).AddTicks(8931)
                        },
                        new
                        {
                            Id = new Guid("857918e8-67dd-4c35-b70d-936ba0fc0c05"),
                            CreatedAt = new DateTime(2023, 9, 18, 14, 31, 1, 92, DateTimeKind.Local).AddTicks(8934),
                            Name = "Barcada Chat",
                            UpdatedAt = new DateTime(2023, 9, 18, 14, 31, 1, 92, DateTimeKind.Local).AddTicks(8933)
                        });
                });

            modelBuilder.Entity("CSMWebsite2023.Data.Models.ChatMedium", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("ChatId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("ChatMessageId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("MediaType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ChatId");

                    b.HasIndex("ChatMessageId");

                    b.HasIndex("UserId");

                    b.ToTable("ChatMedia");
                });

            modelBuilder.Entity("CSMWebsite2023.Data.Models.ChatMember", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("ChatId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("ChatId");

                    b.HasIndex("UserId");

                    b.ToTable("ChatMembers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a3c237aa-97b9-481b-bc32-5ca036b9b501"),
                            ChatId = new Guid("857918e8-67dd-4c35-b70d-936ba0fc0c03"),
                            CreatedAt = new DateTime(2023, 9, 18, 14, 31, 1, 92, DateTimeKind.Local).AddTicks(8948),
                            UpdatedAt = new DateTime(2023, 9, 18, 14, 31, 1, 92, DateTimeKind.Local).AddTicks(8947),
                            UserId = new Guid("91a4e383-5133-4675-ad4e-24ef11bb4c00")
                        },
                        new
                        {
                            Id = new Guid("a3c237aa-97b9-481b-bc32-5ca036b9b502"),
                            ChatId = new Guid("857918e8-67dd-4c35-b70d-936ba0fc0c03"),
                            CreatedAt = new DateTime(2023, 9, 18, 14, 31, 1, 92, DateTimeKind.Local).AddTicks(8952),
                            UpdatedAt = new DateTime(2023, 9, 18, 14, 31, 1, 92, DateTimeKind.Local).AddTicks(8952),
                            UserId = new Guid("91a4e383-5133-4675-ad4e-24ef11bb4c01")
                        });
                });

            modelBuilder.Entity("CSMWebsite2023.Data.Models.ChatMessage", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("ChatId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Message")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("ReplyToId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("ChatId");

                    b.HasIndex("UserId");

                    b.ToTable("ChatMessages");

                    b.HasData(
                        new
                        {
                            Id = new Guid("39c059ac-0cee-4daa-a8bd-2ee9d7050030"),
                            ChatId = new Guid("857918e8-67dd-4c35-b70d-936ba0fc0c03"),
                            CreatedAt = new DateTime(2023, 9, 18, 14, 31, 1, 92, DateTimeKind.Local).AddTicks(8958),
                            Message = "Hi, Nunc at turpis faucibus, viverra ipsum non, vestibulum nibh.",
                            UpdatedAt = new DateTime(2023, 9, 18, 14, 31, 1, 92, DateTimeKind.Local).AddTicks(8957),
                            UserId = new Guid("91a4e383-5133-4675-ad4e-24ef11bb4c00")
                        },
                        new
                        {
                            Id = new Guid("39c059ac-0cee-4daa-a8bd-2ee9d7050031"),
                            ChatId = new Guid("857918e8-67dd-4c35-b70d-936ba0fc0c03"),
                            CreatedAt = new DateTime(2023, 9, 18, 14, 31, 1, 92, DateTimeKind.Local).AddTicks(8961),
                            Message = "Hello, Mauris condimentum urna vel diam gravida vulputate",
                            UpdatedAt = new DateTime(2023, 9, 18, 14, 31, 1, 92, DateTimeKind.Local).AddTicks(8961),
                            UserId = new Guid("91a4e383-5133-4675-ad4e-24ef11bb4c01")
                        });
                });

            modelBuilder.Entity("CSMWebsite2023.Data.Models.ChatReaction", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("ChatId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("ChatMessageId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("ReactionType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("ChatId");

                    b.HasIndex("ChatMessageId");

                    b.HasIndex("UserId");

                    b.ToTable("ChatReactions");
                });

            modelBuilder.Entity("CSMWebsite2023.Data.Models.User", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("91a4e383-5133-4675-ad4e-24ef11bb4c00"),
                            CreatedAt = new DateTime(2023, 9, 18, 14, 31, 1, 92, DateTimeKind.Local).AddTicks(8914),
                            EmailAddress = "etirel@mailinator.com",
                            FirstName = "Elspeth",
                            LastName = "Tirel",
                            UpdatedAt = new DateTime(2023, 9, 18, 14, 31, 1, 92, DateTimeKind.Local).AddTicks(8901)
                        },
                        new
                        {
                            Id = new Guid("91a4e383-5133-4675-ad4e-24ef11bb4c01"),
                            CreatedAt = new DateTime(2023, 9, 18, 14, 31, 1, 92, DateTimeKind.Local).AddTicks(8921),
                            EmailAddress = "jbeleren@mailinator.com",
                            FirstName = "Jace",
                            LastName = "Beleren",
                            UpdatedAt = new DateTime(2023, 9, 18, 14, 31, 1, 92, DateTimeKind.Local).AddTicks(8921)
                        });
                });

            modelBuilder.Entity("CSMWebsite2023.Data.Models.ChatMedium", b =>
                {
                    b.HasOne("CSMWebsite2023.Data.Models.Chat", "Chat")
                        .WithMany()
                        .HasForeignKey("ChatId");

                    b.HasOne("CSMWebsite2023.Data.Models.ChatMessage", "ChatMessage")
                        .WithMany()
                        .HasForeignKey("ChatMessageId");

                    b.HasOne("CSMWebsite2023.Data.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Chat");

                    b.Navigation("ChatMessage");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CSMWebsite2023.Data.Models.ChatMember", b =>
                {
                    b.HasOne("CSMWebsite2023.Data.Models.Chat", "Chat")
                        .WithMany()
                        .HasForeignKey("ChatId");

                    b.HasOne("CSMWebsite2023.Data.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Chat");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CSMWebsite2023.Data.Models.ChatMessage", b =>
                {
                    b.HasOne("CSMWebsite2023.Data.Models.Chat", "Chat")
                        .WithMany()
                        .HasForeignKey("ChatId");

                    b.HasOne("CSMWebsite2023.Data.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Chat");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CSMWebsite2023.Data.Models.ChatReaction", b =>
                {
                    b.HasOne("CSMWebsite2023.Data.Models.Chat", "Chat")
                        .WithMany()
                        .HasForeignKey("ChatId");

                    b.HasOne("CSMWebsite2023.Data.Models.ChatMessage", "ChatMessage")
                        .WithMany()
                        .HasForeignKey("ChatMessageId");

                    b.HasOne("CSMWebsite2023.Data.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Chat");

                    b.Navigation("ChatMessage");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
